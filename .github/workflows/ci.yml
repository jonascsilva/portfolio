name: Main pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
      node-version: ${{ steps.node-version.outputs.node-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        id: node-version
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node.js modules
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js version from setup
        run: echo "Using Node.js ${{ needs.setup.outputs.node-version }}"

      - name: Run tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js version from setup
        run: echo "Using Node.js ${{ needs.setup.outputs.node-version }}"

      - name: Run lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js version from setup
        run: echo "Using Node.js ${{ needs.setup.outputs.node-version }}"

      - name: Build project
        run: npm run build
